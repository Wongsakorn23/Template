# Generated by Selenium IDE
import pytest
import time
import json
import allure
from SC import take_screenshot
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities
from selenium.common.exceptions import NoSuchElementException
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions

class Test():
  def setup_method(self, method):
    #self.driver = webdriver.Remote(command_executor='http://192.168.41.66:4445', desired_capabilities=DesiredCapabilities.CHROME)
    self.driver = webdriver.Chrome()
    chrome_options = Options()
    chrome_options.add_argument('--headless')  # Enable headless mode
    chrome_options.add_argument('--no-sandbox')
    chrome_options.add_argument('--disable-dev-shm-usage')
    #self.driver = webdriver.Remote(command_executor='http://10.99.20.121:4445',options=chrome_options)
    #self.driver = webdriver.Chrome(options=chrome_options)
    self.driver.set_window_size(1920, 1080)
    self.driver.maximize_window()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()

  def wait_for_window(self, timeout = 2):
    time.sleep(round(timeout / 1000))
    wh_now = self.driver.window_handles
    wh_then = self.vars["window_handles"]
    if len(wh_now) > len(wh_then):
      return set(wh_now).difference(set(wh_then)).pop()
  
  def test(self):
    with allure.step("Open URL"):
      self.driver.get("https://www.copperwired.co.th/ir_index.php?webcasts")
    try:
      time.sleep(1)

      time.sleep(2)
      self.driver.switch_to.frame(0)
      self.driver.find_element(By.LINK_TEXT, "ยอมรับ").click()
      time.sleep(2)
      element = self.driver.find_element(By.CSS_SELECTOR, "#menu-item-346 > a")
      actions = ActionChains(self.driver)
      actions.move_to_element(element).perform()
      time.sleep(2)
      self.driver.find_element(By.CSS_SELECTOR, ".menu-item-346-en > a").click()
      time.sleep(2)



      self.vars["window_handles"] = self.driver.window_handles
      try:
        self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(1) > td:nth-child(2) center").click()
      except NoSuchElementException:
        time.sleep(1.5)
      finally :
        if (len(self.driver.window_handles) == 2):
            self.vars["win_new"] = self.wait_for_window(2000)
            self.driver.switch_to.window(self.vars["win_new"])
            time.sleep(5)
            url = self.driver.execute_script("return window.location.href;")
            if ("youtube" in url) :
                pass
            elif ("facebook" in url) :
                pass
            else : 
              video =  self.driver.find_element(By.ID,"my_video_1_html5_api").get_attribute("src")
              assert video
              wait = WebDriverWait(self.driver, 10)
              video_element = wait.until(EC.presence_of_element_located((By.XPATH, '//*[@id="my_video_1"]/div[6]/div')))
              if video_element.is_displayed():
                  text = video_element.text
                  assert text != "The media could not be loaded, either because the server or network failed or because the format is not supported." #คำที่ต้องไม่เจอถึงจะผ่าน
              pass
            time.sleep(1)
            self.driver.close()
            self.driver.switch_to.window(self.vars["window_handles"][0])
            time.sleep(1.5)
        pass


      self.driver.switch_to.frame(0)
      self.vars["window_handles"] = self.driver.window_handles
      try:
        self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(1) > td:nth-child(3) center").click()
      except NoSuchElementException:
        time.sleep(1.5)
      if (len(self.driver.window_handles) == 2):
        self.vars["win_new"] = self.wait_for_window(2000)
        self.driver.switch_to.window(self.vars["win_new"])
        self.driver.switch_to.frame(0)
        elements = self.driver.find_elements(By.ID, "content")
        assert len(elements) == 0
        time.sleep(3)
        self.driver.close()
      pass
      self.driver.switch_to.window(self.vars["window_handles"][0])
      time.sleep(1.5)

      self.driver.switch_to.frame(0)
      self.vars["window_handles"] = self.driver.window_handles
      try:
        self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(2) > td:nth-child(2) center").click()
      except NoSuchElementException:
        time.sleep(1.5)
      finally :
        if (len(self.driver.window_handles) == 2):
            self.vars["win_new"] = self.wait_for_window(2000)
            self.driver.switch_to.window(self.vars["win_new"])
            time.sleep(5)
            url = self.driver.execute_script("return window.location.href;")
            if ("youtube" in url) :
                pass
            elif ("facebook" in url) :
                pass
            else : 
              video =  self.driver.find_element(By.ID,"my_video_1_html5_api").get_attribute("src")
              assert video
              wait = WebDriverWait(self.driver, 10)
              video_element = wait.until(EC.presence_of_element_located((By.XPATH, '//*[@id="my_video_1"]/div[6]/div')))
              if video_element.is_displayed():
                  text = video_element.text
                  assert text != "The media could not be loaded, either because the server or network failed or because the format is not supported." #คำที่ต้องไม่เจอถึงจะผ่าน
              pass
            time.sleep(1)
            self.driver.close()
            self.driver.switch_to.window(self.vars["window_handles"][0])
            time.sleep(1.5)
        pass
      
      self.driver.switch_to.frame(0)
      self.vars["window_handles"] = self.driver.window_handles
      try:
        self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(2) > td:nth-child(3) center").click()
      except NoSuchElementException:
        time.sleep(1.5)
      if (len(self.driver.window_handles) == 2):
        self.vars["win_new"] = self.wait_for_window(2000)
        self.driver.switch_to.window(self.vars["win_new"])
        self.driver.switch_to.frame(0)
        elements = self.driver.find_elements(By.ID, "content")
        assert len(elements) == 0
        time.sleep(3)
        self.driver.close()
      pass
      self.driver.switch_to.window(self.vars["window_handles"][0])
      time.sleep(1.5)

      self.driver.switch_to.frame(0)
      self.vars["window_handles"] = self.driver.window_handles
      try:
        self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(3) > td:nth-child(2) center").click()
      except NoSuchElementException:
        time.sleep(1.5)
      finally :
        if (len(self.driver.window_handles) == 2):
            self.vars["win_new"] = self.wait_for_window(2000)
            self.driver.switch_to.window(self.vars["win_new"])
            time.sleep(5)
            url = self.driver.execute_script("return window.location.href;")
            if ("youtube" in url) :
                pass
            elif ("facebook" in url) :
                pass
            else : 
              video =  self.driver.find_element(By.ID,"my_video_1_html5_api").get_attribute("src")
              assert video
              wait = WebDriverWait(self.driver, 10)
              video_element = wait.until(EC.presence_of_element_located((By.XPATH, '//*[@id="my_video_1"]/div[6]/div')))
              if video_element.is_displayed():
                  text = video_element.text
                  assert text != "The media could not be loaded, either because the server or network failed or because the format is not supported." #คำที่ต้องไม่เจอถึงจะผ่าน
              pass
            time.sleep(1)
            self.driver.close()
            self.driver.switch_to.window(self.vars["window_handles"][0])
            time.sleep(1.5)
        pass
      
      self.driver.switch_to.frame(0)
      self.vars["window_handles"] = self.driver.window_handles
      try:
        self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(3) > td:nth-child(3) center").click()
      except NoSuchElementException:
        time.sleep(1.5)
      if (len(self.driver.window_handles) == 2):
        self.vars["win_new"] = self.wait_for_window(2000)
        self.driver.switch_to.window(self.vars["win_new"])
        self.driver.switch_to.frame(0)
        elements = self.driver.find_elements(By.ID, "content")
        assert len(elements) == 0
        time.sleep(3)
        self.driver.close()
      pass
      self.driver.switch_to.window(self.vars["window_handles"][0])
      time.sleep(1.5)

      self.driver.switch_to.frame(0)
      self.vars["window_handles"] = self.driver.window_handles
      try:
        self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(4) > td:nth-child(2) center").click()
      except NoSuchElementException:
        time.sleep(1.5)
      finally :
        if (len(self.driver.window_handles) == 2):
            self.vars["win_new"] = self.wait_for_window(2000)
            self.driver.switch_to.window(self.vars["win_new"])
            time.sleep(5)
            url = self.driver.execute_script("return window.location.href;")
            if ("youtube" in url) :
                pass
            elif ("facebook" in url) :
                pass
            else : 
              video =  self.driver.find_element(By.ID,"my_video_1_html5_api").get_attribute("src")
              assert video
              wait = WebDriverWait(self.driver, 10)
              video_element = wait.until(EC.presence_of_element_located((By.XPATH, '//*[@id="my_video_1"]/div[6]/div')))
              if video_element.is_displayed():
                  text = video_element.text
                  assert text != "The media could not be loaded, either because the server or network failed or because the format is not supported." #คำที่ต้องไม่เจอถึงจะผ่าน
              pass
            time.sleep(1)
            self.driver.close()
            self.driver.switch_to.window(self.vars["window_handles"][0])
            time.sleep(1.5)
        pass
      
      self.driver.switch_to.frame(0)
      self.vars["window_handles"] = self.driver.window_handles
      try:
        self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(4) > td:nth-child(3) center").click()
      except NoSuchElementException:
        time.sleep(1.5)
      if (len(self.driver.window_handles) == 2):
        self.vars["win_new"] = self.wait_for_window(2000)
        self.driver.switch_to.window(self.vars["win_new"])
        self.driver.switch_to.frame(0)
        elements = self.driver.find_elements(By.ID, "content")
        assert len(elements) == 0
        time.sleep(3)
        self.driver.close()
      pass
      self.driver.switch_to.window(self.vars["window_handles"][0])
      time.sleep(1.5)

      self.driver.switch_to.frame(0)
      self.vars["window_handles"] = self.driver.window_handles
      try:
        self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(5) > td:nth-child(2) center").click()
      except NoSuchElementException:
        time.sleep(1.5)
      finally :
        if (len(self.driver.window_handles) == 2):
            self.vars["win_new"] = self.wait_for_window(2000)
            self.driver.switch_to.window(self.vars["win_new"])
            time.sleep(5)
            url = self.driver.execute_script("return window.location.href;")
            if ("youtube" in url) :
                pass
            elif ("facebook" in url) :
                pass
            else : 
              video =  self.driver.find_element(By.ID,"my_video_1_html5_api").get_attribute("src")
              assert video
              wait = WebDriverWait(self.driver, 10)
              video_element = wait.until(EC.presence_of_element_located((By.XPATH, '//*[@id="my_video_1"]/div[6]/div')))
              if video_element.is_displayed():
                  text = video_element.text
                  assert text != "The media could not be loaded, either because the server or network failed or because the format is not supported." #คำที่ต้องไม่เจอถึงจะผ่าน
              pass
            time.sleep(1)
            self.driver.close()
            self.driver.switch_to.window(self.vars["window_handles"][0])
            time.sleep(1.5)
        pass
      
      self.driver.switch_to.frame(0)
      self.vars["window_handles"] = self.driver.window_handles
      try:
        self.driver.find_element(By.CSS_SELECTOR, ".odd:nth-child(5) > td:nth-child(3) center").click()
      except NoSuchElementException:
        time.sleep(1.5)
      if (len(self.driver.window_handles) == 2):
        self.vars["win_new"] = self.wait_for_window(2000)
        self.driver.switch_to.window(self.vars["win_new"])
        self.driver.switch_to.frame(0)
        elements = self.driver.find_elements(By.ID, "content")
        assert len(elements) == 0
        time.sleep(3)
        self.driver.close()
      pass
      self.driver.switch_to.window(self.vars["window_handles"][0])
      time.sleep(1.5)

      self.driver.switch_to.frame(0)
      self.vars["window_handles"] = self.driver.window_handles
      try:
        self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(6) > td:nth-child(2) center").click()
      except NoSuchElementException:
        time.sleep(1.5)
      finally :
        if (len(self.driver.window_handles) == 2):
            self.vars["win_new"] = self.wait_for_window(2000)
            self.driver.switch_to.window(self.vars["win_new"])
            time.sleep(5)
            url = self.driver.execute_script("return window.location.href;")
            if ("youtube" in url) :
                pass
            elif ("facebook" in url) :
                pass
            else : 
              video =  self.driver.find_element(By.ID,"my_video_1_html5_api").get_attribute("src")
              assert video
              wait = WebDriverWait(self.driver, 10)
              video_element = wait.until(EC.presence_of_element_located((By.XPATH, '//*[@id="my_video_1"]/div[6]/div')))
              if video_element.is_displayed():
                  text = video_element.text
                  assert text != "The media could not be loaded, either because the server or network failed or because the format is not supported." #คำที่ต้องไม่เจอถึงจะผ่าน
              pass
            time.sleep(1)
            self.driver.close()
            self.driver.switch_to.window(self.vars["window_handles"][0])
            time.sleep(1.5)
        pass
      
      self.driver.switch_to.frame(0)
      self.vars["window_handles"] = self.driver.window_handles
      try:
        self.driver.find_element(By.CSS_SELECTOR, ".even:nth-child(6) > td:nth-child(3) center").click()
      except NoSuchElementException:
        time.sleep(1.5)
      if (len(self.driver.window_handles) == 2):
        self.vars["win_new"] = self.wait_for_window(2000)
        self.driver.switch_to.window(self.vars["win_new"])
        self.driver.switch_to.frame(0)
        elements = self.driver.find_elements(By.ID, "content")
        assert len(elements) == 0
        time.sleep(3)
        self.driver.close()
      pass
      self.driver.switch_to.window(self.vars["window_handles"][0])
      time.sleep(1.5)
    
    except Exception as e:
      # If an assertion error occurs, capture a screenshot and attach it to the Allure report
      allure.attach(self.driver.get_screenshot_as_png(), name="Error Screenshot", attachment_type=allure.attachment_type.PNG)
      raise e